name: zep-ce
services:
  zep:
    image: zepai/zep:latest
    expose:
      - "8000"
    volumes:
      - ./zep.yaml:/app/zep.yaml
    environment:
      - ZEP_CONFIG_FILE=zep.yaml
      - ZEP_API_SECRET=${ZEP_API_SECRET}
      - ZEP_STORE_TYPE=postgres
      - ZEP_POSTGRES_DSN=postgres://postgres:postgres@db:5432/postgres?sslmode=disable
    networks:
      - zep-network
      - dokploy-network
    depends_on:
      graphiti:
        condition: service_healthy
      db:
        condition: service_healthy
    labels:
      # Traefik labels for Dokploy
      - "traefik.enable=true"
      - "traefik.http.routers.zep.rule=Host(`zep1.martin-linde.com`)"
      - "traefik.http.routers.zep.entrypoints=websecure"
      - "traefik.http.routers.zep.tls.certresolver=letsencrypt"
      - "traefik.http.services.zep.loadbalancer.server.port=8000"
      - "traefik.docker.network=dokploy-network"

  db:
    image: ankane/pgvector:v0.5.1
    container_name: zep-ce-postgres
    restart: on-failure
    shm_size: "128mb"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - zep-network
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - zep-db:/var/lib/postgresql/data

  graphiti:
    image: zepai/graphiti:0.3
    expose:
      - "8003"
    env_file:
      - .env
    networks:
      - zep-network
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import urllib.request; urllib.request.urlopen('http://localhost:8003/healthcheck')",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      neo4j:
        condition: service_healthy
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MODEL_NAME=gpt-4o-mini
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=zepzepzep
      - PORT=8003

  neo4j:
    image: neo4j:5.22.0
    networks:
      - zep-network
      - dokploy-network
    healthcheck:
      test: wget http://localhost:7474 || exit 1
      interval: 1s
      timeout: 10s
      retries: 20
      start_period: 3s
    expose:
      - "7474"
      - "7687"
    volumes:
      - neo4j_data:/data
    environment:
      - NEO4J_AUTH=neo4j/zepzepzep
    labels:
      # Optional: expose Neo4j browser if needed
      - "traefik.enable=true"
      - "traefik.http.routers.neo4j.rule=Host(`neo4j-zep1.martin-linde.com`)"
      - "traefik.http.routers.neo4j.entrypoints=websecure"
      - "traefik.http.routers.neo4j.tls.certresolver=letsencrypt"
      - "traefik.http.services.neo4j.loadbalancer.server.port=7474"
      - "traefik.docker.network=dokploy-network"

volumes:
  neo4j_data:
  zep-db:

networks:
  zep-network:
    driver: bridge
  dokploy-network:
    external: true
